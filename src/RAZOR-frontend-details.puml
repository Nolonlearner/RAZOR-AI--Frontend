@startuml
!define RECTANGLE class

' 用户管理组件：负责用户的登录、注册、信息管理等功能
package "用户管理" {
    RECTANGLE UserManagement {
        + 登录(用户名, 密码) : 登录状态
        + 注册(用户名, 密码, 手机号, 验证码) : 注册状态
        + 更新用户信息(用户ID, 新信息) : 更新状态
        - 密码重置接口
        - 登录接口
        - 用户信息接口
    }

    UserManagement --|> APIRequestHandler : 提供登录、注册接口
    UserManagement ..> BackendAPI : 强依赖（用户验证）
}

' AI 机器人模块：提供用户与AI机器人交互的功能
package "AI机器人" {
    RECTANGLE AI_Robot {
        + 启动对话(用户ID, 问题) : AI回复
        + 获取AI历史记录(用户ID) : 历史记录
        + 显示机器人信息() : 机器人描述
        - 机器人配置接口
        - 聊天接口
    }

    AI_Robot --|> APIRequestHandler : 需要后端AI服务接口
    AI_Robot --> BackendAPI : 强依赖（AI生成回复）
}

' AI 机器人订阅管理组件：管理用户的AI机器人订阅
package "订阅管理" {
    RECTANGLE SubscriptionManagement {
        + 订阅(用户ID, AI机器人ID, 订阅类型) : 订阅状态
        + 查看订阅信息(用户ID) : 订阅详情
        + 更新订阅状态(用户ID, AI机器人ID, 新订阅类型) : 更新状态
        - 订阅接口
        - 用户订阅状态接口
    }

    SubscriptionManagement --|> UserManagement : 依赖用户信息
    SubscriptionManagement --|> APIRequestHandler : 提供和接收API数据
    SubscriptionManagement --> BackendAPI : 强依赖（订阅数据存储）
}

' 聊天界面：提供用户与机器人互动的界面
package "聊天界面" {
    RECTANGLE ChatInterface {
        + 展示聊天记录(用户ID, AI机器人ID) : 显示记录
        + 用户输入(问题) : 获取AI回复
        + 显示加载提示() : 加载提示
        - AI聊天接口
        - 消息发送接口
    }

    ChatInterface --|> AI_Robot : 需要AI机器人提供的聊天接口
    ChatInterface --|> APIRequestHandler : 获取后端的AI回复
    ChatInterface --> UserManagement : 获取用户ID
    ChatInterface --> BackendAPI : 强依赖（聊天服务）
}

' 开发者管理：用于管理和配置开发者自己的AI机器人
package "开发者管理" {
    RECTANGLE DeveloperManagement {
        + 配置机器人(机器人ID, 配置内容) : 配置成功
        + 查看开发历史(开发者ID) : 开发历史记录
        + 查看机器人反馈(机器人ID) : 机器人反馈
        - 更新接口
        - 反馈接口
    }

    DeveloperManagement --|> AI_Robot : 提供机器人管理功能
    DeveloperManagement --|> APIRequestHandler : 更新和管理数据
    DeveloperManagement ..> BackendAPI : 强依赖（机器人配置存储）
}

' API请求处理：统一处理所有前端与后端的请求
package "API请求处理" {
    RECTANGLE APIRequestHandler {
        + 发送请求(接口, 参数) : 响应数据
        + 接收响应(数据) : 返回处理结果
        - 调用后端API接口
    }

    APIRequestHandler ..> BackendAPI : 强依赖（与后端交互）
}

' 后端服务模块：模拟后端服务接口
package "后端服务" {
    RECTANGLE BackendAPI {
        + 用户验证(用户名, 密码) : 登录结果
        + 保存用户数据(用户ID, 数据) : 保存成功
        + AI生成回复(问题) : AI回复
        + 机器人配置(配置内容) : 配置成功
        + 更新机器人数据(机器人ID, 数据) : 更新成功
    }
}

' 组件间的依赖关系
UserManagement --> APIRequestHandler : 强依赖（提供登录注册服务）
AI_Robot --> APIRequestHandler : 强依赖（调用AI服务）
ChatInterface --> APIRequestHandler : 强依赖（获取AI回复）
SubscriptionManagement --> APIRequestHandler : 强依赖（提交订阅数据）
DeveloperManagement --> APIRequestHandler : 强依赖（更新机器人配置）

UserManagement --|> BackendAPI : 弱依赖（验证用户数据）
AI_Robot --|> BackendAPI : 强依赖（调用AI服务）
SubscriptionManagement --|> BackendAPI : 强依赖（订阅操作）
DeveloperManagement --|> BackendAPI : 强依赖（调用后端API）

@enduml
